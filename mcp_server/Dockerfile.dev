# Development Dockerfile for MCP Server - nur Runtime Environment, Code wird gemountet
FROM python:3.12-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install uv using the installer script
ADD https://astral.sh/uv/install.sh /uv-installer.sh
RUN sh /uv-installer.sh && rm /uv-installer.sh

# Add uv to PATH
ENV PATH="/root/.local/bin:${PATH}"

# Configure uv for optimal Docker usage
ENV UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy \
    UV_PYTHON_DOWNLOADS=never \
    MCP_SERVER_HOST="0.0.0.0" \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

# Create non-root user
RUN groupadd -r app && useradd -r -d /app -g app app

# Copy only dependency files for installation (not the code)
COPY pyproject.toml uv.lock ./

# Create minimal directory structure that will be overridden by mounts
RUN mkdir -p graphiti_core mcp_server

# Install dependencies only (code will be mounted, use --no-install-project)
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev --no-install-project

# Change ownership to app user
RUN chown -R app:app /app

# Switch to non-root user
USER app

# Expose port
EXPOSE 8000

# Command to run with mounted code
CMD ["uv", "run", "/app/mcp_server/graphiti_mcp_server.py", "--transport", "sse"]